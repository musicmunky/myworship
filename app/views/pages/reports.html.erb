<div id="all_reports" style="padding:0px;">

<ul>
	<li><a href="#top_ten_div">Top 10 Songs</a></li>
	<li><a href="#bottom_ten_div">Bottom 10 Songs</a></li>
	<li><a href="#schedule_song_search_div">Schedules by Song</a></li>
</ul>
<div id="top_ten_div" class="w100fl" style="border-left:1px solid #DDD;border-right:1px solid #DDD;">
	<h3>Top 10 Songs at FFC</h3>
	<div id="top_songs_chart"></div>
	<table class="table" style="margin-top:20px;">
		<thead><tr>
			<th>Name</th>
			<th style="width:250px;text-align:center;">Number of Times Scheduled</th>
			<th style="width:150px;text-align:center;">Last Scheduled</th>
		</tr></thead>
		<tbody>
			<% Song.get_top_songs(10, "DESC").each do |song| %>
				<tr>
					<td><%= link_to song[0].name, song_path(song[0]) %></td>
					<td style="text-align:center;"><%= song[1] %></td>
					<td style="text-align:center;"><%= song[0].get_last_scheduled_span.html_safe %></td>
				</tr>
			<% end %>
		</tbody>
	</table>
</div>

<div id="bottom_ten_div" class="w100fl" style="border-left:1px solid #DDD;border-right:1px solid #DDD;">
	<h3>Bottom 10 Songs at FFC</h3>
	<table class="table" style="margin-top:20px;">
		<thead>
			<tr>
				<th>Name</th>
				<th style="width:250px;text-align:center;">Number of Times Scheduled</th>
				<th style="width:150px;text-align:center;">Last Scheduled</th>
			</tr>
		</thead>
		<tbody>
			<% Song.get_top_songs(10, "ASC").each do |song| %>
				<tr>
					<td><%= link_to song[0].name, song_path(song[0]) %></td>
					<td style="text-align:center;"><%= song[1] %></td>
					<td style="text-align:center;"><%= song[0].get_last_scheduled_span.html_safe %></td></tr>
			<% end %>
		</tbody>
	</table>
</div>

<div id="schedule_song_search_div" class="w100fl" style="border-left:1px solid #DDD;border-right:1px solid #DDD;">
	<h3>
		Search for Schedules by Song
	</h3>
	<div class="w100fl ui-widget">
		<label>Please Select a Song: </label>
		<% songs = @songs.all.order(:name).map { |s| [s.name, s.id] } %>
		<select id="song_search">
			<option value="">Type to Search...</option>
			<%= options_for_select(songs) %>
		</select>
		<button class="btn btn-default" onclick="getSchedules()">
			Search <span class="glyphicon glyphicon-search"></span>
		</button>
	</div>
	<div class="w100fl" style="margin-top:30px;">
		<div class="w100fl" style="margin-bottom:20px;font-size:16px;">
			<label>Search results for: </label><span id="song_name" style="margin-left:15px;"></span>
		</div>
		<table id="song_search_table" class="table">
			<thead><tr><th style="width:150px;">Date</th><th style="width:150px;">Name</th><th>Notes</th></tr></thead>
			<tbody></tbody>
		</table>
	</div>
</div>

</div>

<% data = [] %>
<% cats = [] %>
<% Song.get_top_songs(10, "DESC").each do |song| %>
	<% data.push(song[1]) %>
	<% cats.push("#{song[0].name} (#{song[0].get_last_scheduled})") %>
<% end %>

<%= javascript_tag do %>

(function( $ ) {

	$.widget( "custom.combobox", {
		_create: function() {
			this.wrapper = $( "<span>" )
				.addClass( "custom-combobox" )
				.insertAfter( this.element );

			this.element.hide();
			this._createAutocomplete();
			this._createShowAllButton();
		},

		_createAutocomplete: function() {
			var selected = this.element.children( ":selected" ),
				value = selected.val() ? selected.text() : "";

			this.input = $( "<input>" )
				.appendTo( this.wrapper )
				.val( value )
				.attr({ title: "", id:"song_search_txt" })
				.addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
				.autocomplete({
				delay: 0,
				minLength: 0,
				source: $.proxy( this, "_source" )
			})
				.tooltip({
				tooltipClass: "ui-state-highlight"
			});

			this._on( this.input, {
				autocompleteselect: function( event, ui ) {
					ui.item.option.selected = true;
					this._trigger( "select", event, {
						item: ui.item.option
					});
				},

				autocompletechange: "_removeIfInvalid"
			});
		},

		_createShowAllButton: function() {
			var input = this.input,
				wasOpen = false;

			$( "<a>" )
				.attr( "tabIndex", -1 )
				.attr( "title", "Show All Items" )
				.tooltip()
				.appendTo( this.wrapper )
				.button({
				icons: {
					primary: "ui-icon-triangle-1-s"
				},
				text: false
			})
				.removeClass( "ui-corner-all" )
				.addClass( "custom-combobox-toggle ui-corner-right" )
				.mousedown(function() {
				wasOpen = input.autocomplete( "widget" ).is( ":visible" );
			})
				.click(function() {
				input.focus();

				// Close if already visible
				if ( wasOpen ) {
					return;
				}

				// Pass empty string as value to search for, displaying all results
				input.autocomplete( "search", "" );
			});
		},

		_source: function( request, response ) {
			var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
			response( this.element.children( "option" ).map(function() {
				var text = $( this ).text();
				if ( this.value && ( !request.term || matcher.test(text) ) )
					return {
						label: text,
						value: text,
						option: this
					};
			}) );
		},

		_removeIfInvalid: function( event, ui ) {

			// Selected an item, nothing to do
			if ( ui.item ) {
				return;
			}

			// Search for a match (case-insensitive)
			var value = this.input.val(),
				valueLowerCase = value.toLowerCase(),
				valid = false;
			this.element.children( "option" ).each(function() {
				if ( $( this ).text().toLowerCase() === valueLowerCase ) {
					this.selected = valid = true;
					return false;
				}
			});

			// Found a match, nothing to do
			if ( valid ) {
				return;
			}

			// Remove invalid value
			this.input
				.val( "" )
				.attr( "title", value + " didn't match any item" )
				.tooltip( "open" );
			this.element.val( "" );
			this._delay(function() {
				this.input.tooltip( "close" ).attr( "title", "" );
			}, 2500 );
			this.input.autocomplete( "instance" ).term = "";
		},

		_destroy: function() {
			this.wrapper.remove();
			this.element.show();
		}
	});
})( jQuery );

$(function() {
	$( "#song_search" ).combobox();
	var sst = FUSION.get.node("song_search_txt");
	if(sst){ sst.value = ""; }
});

$(function () {

    $('#top_songs_chart').highcharts({
        chart: {
            type: 'column'
        },
        title: { text: "Most Frequently Scheduled Songs" },
        subtitle: {},
        xAxis: {
            categories: <%= raw cats.to_json %>,
            crosshair: true
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Number of Schedules'
            }
        },
        tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                '<td style="padding:0"><b>{point.y:.0f}</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
        },
        plotOptions: {
            column: {
                pointPadding: 0.2,
                borderWidth: 0
            }
        },
        series: [{
            name: 'Times Scheduled',
            data: <%= data %>
        }]
    });
});



<% end %>